services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - support-network
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      # ลบบรรทัดนี้ออก หรือเปลี่ยนเป็นค่าว่าง
      # KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_METRIC_REPORTERS: ""
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # ลบ Confluent metrics reporter configurations ออก
      # KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      # KAFKA_CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      KAFKA_CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - support-network
    volumes:
      - kafka-data:/var/lib/kafka/data

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    networks:
      - support-network

  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "3001:3001"
    env_file:
      - ./api-gateway/.env
    depends_on:
      - kafka
    networks:
      - support-network

  auth-microservice:
    build:
      context: ./auth-microservice
    container_name: auth-services
    ports:
      - "3002:3002"
    env_file:
      - ./auth-microservice/.env
    depends_on:
      - kafka
    networks:
      - support-network

  ticket-microservice:
    build:
      context: ./ticket-microservice
    container_name: ticket-services
    ports:
      - "3003:3003"
    env_file:
      - ./ticket-microservice/.env
    depends_on:
      - kafka
    networks:
      - support-network

  notification-microservice:
    build:
      context: ./notification-microservice
    container_name: notification-services
    ports:
      - "3004:3004"
    env_file:
      - ./notification-microservice/.env
    depends_on:
      - kafka
    networks:
      - support-network

  user-microservice:
    build:
      context: ./user-microservice
    container_name: user-services
    ports:
      - "3005:3005"
    env_file:
      - ./user-microservice/.env
    depends_on:
      - kafka
    networks:
      - support-network

  customer-microservice:
    build:
      context: ./customer-microservice
    container_name: customer-services
    ports:
      - "3006:3006"
    env_file:
      - ./customer-microservice/.env
    depends_on:
      - kafka
    networks:
      - support-network

  project-microservice:
    build:
      context: ./project-microservice
    container_name: project-services
    ports:
      - "3007:3007"
    env_file: 
      - ./project-microservice/.env
    depends_on:
      - kafka
    networks:
      - support-network

  satisfaction-microservice:
    build:
      context: ./satisfaction-microservice
    container_name: satisfaction-services
    ports:
      - "3008:3008"
    env_file:
      - ./satisfaction-microservice/.env
    depends_on:
      - kafka
    networks:
      - support-network

  status-microservice:
    build:
      context: ./status-microservice
    container_name: status-services
    ports: 
      - "3009:3009"
    env_file:
      - ./status-microservice/.env
    depends_on:
      - kafka
    networks:
      - support-network

  categories-microservice:
    build:
      context: ./categories-microservice
    container_name: categories-services
    ports:
      - "3010:3010"
    env_file:
      - ./categories-microservice/.env
    depends_on:
      - kafka
    networks:
      - support-network

volumes:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:

networks:
  support-network:
    driver: bridge